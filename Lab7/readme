In this project, our goal is to update the skeleton support code to generate projections of a given dataset and visualize them on the front-end. We will be working with scatterplots and confusion matrices. The tasks involved are as follows:

Copy the scatterplot and confusion matrix code from the previous week's work into the provided code for this week.
Set up the server and ensure that the HTML file can be run in a web browser.
Calculate the projections using different methods. For t-SNE, try different perplexity values (2, 5, 10, and 20) and choose the one that best suits the application. Explain the rationale for selecting a specific perplexity value.
Optionally, create a user interface change that allows users to update the perplexity argument in the front-end, propagate it to the server, and visualize the resulting t-SNE projection. This would make the application interactive and full-stack.
Visualize the projections using a scatterplot. Implement the necessary code to handle the "on change" event generated by the radio buttons. Adjust the domain when the current projection option is not axis-aligned. Add tooltips to display the attributes of data points when hovered over.
Study t-SNE by reading the article provided and experimenting with the tool mentioned. Write a paragraph discussing the analytical tasks for which t-SNE is a suitable tool and its limitations.
Answer the following questions in a write-up:
Did the addition of projections change your choice of prediction model for the Somerville Happiness dataset? Explain your reasoning.
Compare the usefulness of the four projections (PCA, MDS, t-SNE, and UMAP) and the original axis-aligned scatterplot for selecting the best model. Explain your reasoning.
Identify potential harm that can be caused by using the projections explored in the lab.
This project aims to enhance the understanding and application of different projections in the context of model selection, while also providing opportunities for interactive visualization and analysis.
